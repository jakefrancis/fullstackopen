{"version":3,"sources":["components/Icon.js","components/Blog.js","components/LoginForm.js","components/BlogForm.js","components/Togglable.js","services/blogs.js","services/login.js","components/Notification.js","components/Header.js","App.js","index.js"],"names":["Icon","iconName","component","componentTrail","className","fill","width","height","viewBox","xlinkHref","Blog","blog","updateLike","user","deleteBlog","useState","detailedView","setDetailedView","liked","setLiked","detailHandler","determineLiked","usernames","likedBy","map","like","username","includes","useEffect","title","author","onClick","likes","href","url","slice","event","preventDefault","name","message","window","confirm","LoginForm","login","setUsername","password","setPassword","handleLogin","a","onSubmit","id","type","value","onChange","target","label","BlogForm","createBlog","setAuthor","setTitle","setUrl","Togglable","React","forwardRef","props","ref","visible","setVisible","hideWhenVisible","display","showWhenVisible","toggleVisibility","useImperativeHandle","style","buttonLabel","children","displayName","baseUrl","token","getAll","axios","get","then","response","data","newObject","config","headers","Authorization","post","likeBlog","put","delete","setToken","newToken","credentials","Notification","content","Header","handleLogout","src","alt","App","blogs","setBlogs","setMessage","setUser","blogFormRef","useRef","getAllBlogs","blogService","reqBlogs","sort","b","loggedUserJSON","localStorage","getItem","JSON","parse","loginService","setItem","stringify","setTimeout","addBlog","blogObject","current","concat","copy","updateIndex","findIndex","blogToUpdate","filter","removeItem","class","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.28da2884.chunk.js","sourcesContent":["import React from 'react'\n\nconst Icon = ({ iconName, component, componentTrail = '' }) => {\n  return (\n    <svg\n      className={`${component}__icon${componentTrail}`}\n      fill=\"black\"\n      width=\"16px\"\n      height=\"16px\"\n      viewBox=\"0 0 20 20\"\n    >\n      <use xlinkHref={`/sprite.svg#icon-${iconName}`} />\n    </svg>\n  )\n}\n\nexport default Icon\n","import React, { useEffect, useState } from 'react'\nimport Icon from './Icon'\nconst Blog = ({ blog, updateLike,user, deleteBlog }) => {\n  const [detailedView, setDetailedView] = useState(true)\n  const [liked, setLiked] = useState(false)\n\n\n  const detailHandler = () => {\n    setDetailedView(!detailedView)\n    if(detailedView) determineLiked()\n  }\n\n  const likeHandler = (event) => {\n    event.preventDefault()\n    updateLike(blog)\n    setLiked(!liked)\n  }\n\n  const deleteHandler = (event) => {\n    event.preventDefault()\n    const message = `Are you sure you want to remove ${blog.title} by ${blog.author}?`\n    if(window.confirm(message)) deleteBlog(blog)\n\n  }\n\n  const determineLiked = () => {\n    const usernames = blog.likedBy.map(like => like.username)\n    setLiked(usernames.includes(user))\n  }\n\n  useEffect(() => {\n    setDetailedView(true)\n  },[])\n\n  return (\n    <div className='blog'>\n      <div className='blog__description'>\n        <span className='blog__description--title'>{blog.title} </span><span className='blog__description--author'>- {blog.author}</span>\n      </div>\n      {detailedView ?\n        <div className='blog__button'>\n          <button className='btn-inline' onClick={detailHandler}>view</button>\n          <p className='blog__button--likes'>{liked ? `rooted: ${blog.likes}`: `roots: ${blog.likes}`}</p>\n        </div>\n        :\n        <div className='blog__details'>\n          <div className='blog__button'>\n            <button className='btn-inline' onClick={detailHandler}>hide</button>\n            <p className='blog__button--likes'>{liked ? `rooted: ${blog.likes}`: `roots: ${blog.likes}`}</p>\n          </div>\n          <div className='blog__info'>\n            <a className='blog__link' href={blog.url.slice(0,4) !== 'http' ? '//'+blog.url : blog.url}>{blog.url}</a>\n          </div>\n\n          <div className='blog__like-container'>\n            <button className ='blog__like-container--like-button' onClick={likeHandler}>{ liked ? <Icon component='blog' componentTrail='--unlike' iconName='thumbs-up'/> : <Icon component='blog' componentTrail='--like' iconName='thumbs-up'/>}</button>\n          </div>\n\n          <div className='blog__posted'>\n            <h3>Posted By: {blog.user.name}</h3>\n            {user === blog.user.username ? <button className='btn-inline blog__posted--remove' onClick={deleteHandler}>remove</button> : null}\n          </div>\n        </div>\n\n      }\n    </div>\n  )\n}\n\nexport default Blog","import React, { useState } from 'react'\nimport PropTypes from 'prop-types'\nimport Icon from './Icon'\n\n\nconst LoginForm = ({ login }) => {\n\n  const [username, setUsername] = useState('')\n  const [password, setPassword] = useState('')\n\n  const usernameHandler = (event) => {\n    setUsername(event.target.value)\n  }\n\n  const passwordHandler = (event) => {\n    setPassword(event.target.value)\n  }\n\n  const handleLogin = async (event) => {\n    event.preventDefault()\n    login({ username,password })\n    setUsername('')\n    setPassword('')\n  }\n\n  return (\n    <form className='login' onSubmit={handleLogin} id='loginForm'>\n      <Icon component='login' iconName='lock-closed-outline'/>\n      <div className='login__input'>\n        <label className='login__label'>Username</label>\n        <input\n          id='username'\n          type=\"text\"\n          value={username}\n          name=\"Username\"\n          onChange={usernameHandler}\n          label='Username:'\n        />\n      </div>\n      <div className='login__input'>\n        <label className='login__label'>Password</label>\n        <input\n          id='password'\n          type=\"password\"\n          value={password}\n          name=\"Password\"\n          onChange={passwordHandler}\n        />\n      </div>\n      <button className='btn-inline' type=\"submit\">login</button>\n    </form>\n  )\n}\n\nLoginForm.propTypes = {\n  login: PropTypes.func.isRequired,\n}\n\nexport default LoginForm","import React, { useState } from 'react'\n\n\nconst BlogForm = ({\n  createBlog\n}) => {\n\n  const [author, setAuthor] = useState('')\n  const [title, setTitle] = useState('')\n  const [url, setUrl] = useState('')\n\n  const authorHandler = (event) => {\n    setAuthor(event.target.value)\n  }\n  const titleHandler = (event) => {\n    setTitle(event.target.value)\n  }\n  const urlHandler = (event) => {\n    setUrl(event.target.value)\n  }\n\n  const addBlog = (event) => {\n    event.preventDefault()\n    createBlog({ author,title,url })\n    setTitle('')\n    setUrl('')\n    setAuthor('')\n  }\n\n\n  return (\n\n    <form className='blog-form' onSubmit={addBlog}>\n      <h2>Create New</h2>\n      <div className='blog-form__input'>\n        <label>Title</label>\n        <input\n          id='title'\n          type='text'\n          name='Title'\n          value={title}\n          onChange={titleHandler}\n        />\n      </div>\n      <div className='blog-form__input'>\n        <label>Author</label>\n        <input\n          id='author'\n          type='text'\n          value={author}\n          name='Author'\n          onChange={authorHandler}\n        />\n      </div>\n      <div className='blog-form__input'>\n        <label>Url</label>\n        <input\n          id='url'\n          type='text'\n          value={url}\n          name='Url'\n          onChange={urlHandler}\n        />\n      </div>\n      <button className='btn-inline blog-form__button'type=\"submit\">save</button>\n    </form>\n\n  )\n}\n\nexport default BlogForm","import React, { useState, useImperativeHandle } from 'react'\nimport PropTypes from 'prop-types'\n\nconst Togglable = React.forwardRef((props, ref) => {\n\n  const [visible, setVisible] = useState(false)\n\n  const hideWhenVisible = { display: visible ? 'none' : '' }\n  const showWhenVisible = { display: visible ? '' : 'none' }\n\n  const toggleVisibility = () => {\n    setVisible(!visible)\n  }\n\n  useImperativeHandle(ref, () => {\n    return {\n      toggleVisibility\n    }\n  })\n\n  return (\n    <div className='toggle'>\n      <div style={hideWhenVisible}>\n        <button className='btn-inline show__blogform__btn'onClick={toggleVisibility}>{props.buttonLabel}</button>\n      </div>\n      <div className='toggle' style={showWhenVisible}>\n        <button className='btn-inline show__blogform__btn' onClick={toggleVisibility}>cancel</button>\n        {props.children}\n      </div>\n    </div>\n  )\n})\n\nTogglable.displayName = 'Togglable'\n\nTogglable.propTypes = {\n  buttonLabel: PropTypes.string.isRequired\n}\n\nexport default Togglable","import axios from 'axios'\nconst baseUrl = '/api/blogs'\n\nlet token = null\n\nconst setToken = (newToken) => {\n  token = `bearer ${newToken}`\n}\n\nconst getAll = () => {\n  const request = axios.get(baseUrl)\n  return request.then(response => response.data)\n}\n\nconst createBlog = async (newObject) => {\n  const config ={\n    headers: { Authorization: token }\n  }\n  const response =  await axios.post(baseUrl, newObject, config)\n  return response.data\n}\n\nconst likeBlog = async (newObject) => {\n  const config ={\n    headers: { Authorization: token }\n  }\n  const url = `${baseUrl}/${newObject.id}`\n  const response = await axios.put(url,newObject.likes,config)\n  return response.data\n}\n\nconst deleteBlog = async (newObject) => {\n  const config ={\n    headers: { Authorization: token }\n  }\n  const url = `${baseUrl}/${newObject.id}`\n  const response = await axios.delete(url,config)\n  return response.data\n}\n\nexport default { getAll, createBlog,likeBlog, deleteBlog, setToken }","import axios from 'axios'\nconst baseUrl ='/api/login'\n\n\n\nconst login = async (credentials) => {\n  const response = await axios.post(baseUrl, credentials)\n  return response.data\n}\n\nexport default { login }","import React from 'react'\n\nconst Notification = ({ message }) => {\n  if(message === null) {\n    return null\n  }\n\n  return (\n    <div className='notification' id='notification'>\n      <h2 className={message.type}>{message.content}</h2>\n    </div>\n  )\n\n}\n\nexport default Notification","import React from 'react'\nimport Notification from './Notification'\n\nconst Header = ({ message, user, handleLogout }) => {\n  /*<h1 className='header__title--title'>Blog Cabin</h1>*/\n\n  return (\n    <div className='header'>\n      {!message ?\n        <div className='header__title'>\n          <img className='header__title--logo' src='img/logo-name.png' alt='blog cabin logo'></img>\n        </div>\n        :\n        <div className='header__title'>\n          <Notification message={message}/>\n        </div>\n\n      }\n      {user ?\n        <div className='logout'>\n          <p className='logout__user'>Hello, {user.name}</p>\n          <button className='btn-inline' onClick={handleLogout}>logout</button>\n        </div>:\n        null\n      }\n    </div>\n  )\n}\n\nexport default Header","import React, { useState, useEffect, useRef } from 'react'\nimport Blog from './components/Blog'\nimport LoginForm from './components/LoginForm'\nimport BlogForm from './components/BlogForm'\nimport Togglable from './components/Togglable'\nimport blogService from './services/blogs'\nimport loginService from './services/login'\nimport Header from './components/Header'\n\nconst App = () => {\n  const [blogs, setBlogs] = useState([])\n  const [message, setMessage] = useState()\n  const [user, setUser] = useState(null)\n  const blogFormRef = useRef()\n\n  const blogForm = () => {\n    return (\n      <Togglable class='blog_form--toggle'buttonLabel='Create New Blog' ref={blogFormRef}>\n        <BlogForm\n          createBlog={addBlog}\n        />\n      </Togglable>\n    )\n  }\n\n  const getAllBlogs = async () => {\n    const reqBlogs = await blogService.getAll()\n    setBlogs(reqBlogs.sort((a,b) => b.likes - a.likes))\n  }\n\n\n  useEffect(getAllBlogs, [])\n\n  useEffect(() => {\n    const loggedUserJSON = window.localStorage.getItem('loggedInBlogappUser')\n    if(loggedUserJSON){\n      const user = JSON.parse(loggedUserJSON)\n      setUser(user)\n      blogService.setToken(user.token)\n    }\n  },[])\n\n  const handleLogin = async (credentials) => {\n    try{\n      const user = await loginService.login(credentials)\n      window.localStorage.setItem('loggedInBlogappUser', JSON.stringify(user))\n      blogService.setToken(user.token)\n      setUser(user)\n      setMessage({ type: 'notification__message', content: `${user.username} login successfull` })\n      setTimeout(() => {\n        setMessage(null)\n      },5000)\n    }\n    catch(error){\n      setMessage({ type: 'notification__error', content: 'wrong credentials' })\n      setTimeout(() => {\n        setMessage(null)\n      },5000)\n    }\n  }\n\n  const addBlog = async (blogObject) => {\n    try{\n      const blog = await blogService.createBlog(blogObject)\n      blogFormRef.current.toggleVisibility()\n      setBlogs(blogs.concat(blog))\n      setMessage({ type: 'notification__message', content: `a new blog ${blog.title}${blog.author === '' ? '' : ` by ${blog.author}`}` })\n      setTimeout(() => {\n        setMessage(null)\n      },5000)\n    }\n    catch(error){\n      setMessage({ type: 'notification__error', content: 'Title and Url fields are required' })\n      setTimeout(() => {\n        setMessage(null)\n      },5000)\n    }\n\n  }\n\n  const likeBlog = async (blogObject) => {\n    try{\n      const blog = await blogService.likeBlog(blogObject)\n      let copy = [...blogs]\n      let updateIndex = copy.findIndex(blogToUpdate => blogToUpdate.id === blog.id)\n      copy[updateIndex] = blog\n      setBlogs(copy)\n    }\n    catch(error){\n      setMessage({ type: 'notification__error', content: 'like error' })\n      setTimeout(() => {\n        setMessage(null)\n      },5000)\n    }\n  }\n\n  const deleteBlog = async (blogObject) => {\n    try{\n      await blogService.deleteBlog(blogObject)\n      let copy = [...blogs]\n      copy = copy.filter(blog => blog.id !== blogObject.id)\n      setBlogs(copy)\n    }\n    catch(error){\n      setMessage({ type: 'notification__error', content: 'unauthorized' })\n      setTimeout(() => {\n        setMessage(null)\n      },5000)\n    }\n  }\n\n  const handleLogout = (event) => {\n    event.preventDefault()\n    window.localStorage.removeItem('loggedInBlogappUser')\n    setUser(null)\n  }\n\n\n  return (\n    <div className='container'>\n      <Header message={message} user={user} handleLogout={handleLogout} />\n      <div className='content'>\n        {user === null ?\n          <LoginForm\n            login={handleLogin}\n          /> :\n          <div className='show__blogform'>\n            {blogForm()}\n          </div>\n        }\n        {user !== null ? <div className='blog-container'>\n          {blogs.map(blog =>\n            <Blog key={blog.id}\n              blog={blog}\n              updateLike={likeBlog}\n              user={user.username}\n              deleteBlog={deleteBlog}/>\n          )} </div> : null\n        }\n\n      </div>\n    </div>\n  )\n}\n\nexport default App","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport App from './App'\nimport './styles.scss'\n\nReactDOM.render(<App />, document.getElementById('root'))"],"sourceRoot":""}