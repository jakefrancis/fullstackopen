{"version":3,"sources":["components/Blog.js","components/LoginForm.js","components/BlogForm.js","components/Notification.js","components/Togglable.js","services/blogs.js","services/login.js","App.js","index.js"],"names":["Blog","blog","updateLike","user","deleteBlog","useState","detailedView","setDetailedView","liked","setLiked","detailHandler","determineLiked","usernames","likedBy","map","like","username","includes","style","paddingTop","paddingLeft","border","borderWidth","marginBottom","title","author","onClick","href","url","slice","likes","event","preventDefault","name","message","window","confirm","LoginForm","login","setUsername","password","setPassword","handleLogin","a","onSubmit","type","value","onChange","target","BlogForm","createBlog","setAuthor","setTitle","setUrl","Notification","className","content","Togglable","React","forwardRef","props","ref","visible","setVisible","hideWhenVisible","display","showWhenVisible","toggleVisibility","useImperativeHandle","buttonLabel","children","displayName","baseUrl","token","getAll","axios","get","then","response","data","newObject","config","headers","Authorization","post","likeBlog","id","put","delete","setToken","newToken","credentials","App","blogs","setBlogs","setMessage","setUser","blogFormRef","useRef","getAllBlogs","blogService","reqBlogs","sort","b","useEffect","loggedUserJSON","localStorage","getItem","JSON","parse","loginService","setItem","stringify","setTimeout","addBlog","blogObject","current","concat","copy","updateIndex","findIndex","blogToUpdate","filter","removeItem","ReactDOM","render","document","getElementById"],"mappings":"2OAqDeA,EApDF,SAAC,GAA2C,IAAzCC,EAAwC,EAAxCA,KAAMC,EAAkC,EAAlCA,WAAWC,EAAuB,EAAvBA,KAAMC,EAAiB,EAAjBA,WAAiB,EACdC,oBAAS,GADK,mBAC/CC,EAD+C,KACjCC,EADiC,OAE5BF,oBAAS,GAFmB,mBAE/CG,EAF+C,KAExCC,EAFwC,KAahDC,EAAgB,WACpBH,GAAiBD,GACdA,GAAcK,KAgBbA,EAAiB,WACrB,IAAMC,EAAYX,EAAKY,QAAQC,KAAI,SAAAC,GAAI,OAAIA,EAAKC,YAChDP,EAASG,EAAUK,SAASd,KAG9B,OACE,qBAAKe,MAhCW,CAChBC,WAAY,GACZC,YAAa,EACbC,OAAQ,QACRC,YAAa,EACbC,aAAc,GA2Bd,SACGjB,EACC,8BAAIL,EAAKuB,MAAT,MAAmBvB,EAAKwB,OAAxB,IAAgC,wBAAQC,QAAShB,EAAjB,qBAC9B,gCACA,8BAAIT,EAAKuB,MAAT,MAAmBvB,EAAKwB,OAAxB,IAAgC,wBAAQC,QAAShB,EAAjB,qBAChC,mBAAGiB,KAA8B,SAAxB1B,EAAK2B,IAAIC,MAAM,EAAE,GAAgB,KAAK5B,EAAK2B,IAAM3B,EAAK2B,IAA/D,SAAqE3B,EAAK2B,MAC1E,uCAAU3B,EAAK6B,MAAM,wBAAQJ,QAzBjB,SAACK,GACnBA,EAAMC,iBACN9B,EAAWD,GACXQ,GAAUD,IAsBiB,SAAgCA,EAAQ,SAAW,YACxE,6BAAKP,EAAKE,KAAK8B,OACd9B,IAASF,EAAKE,KAAKa,SAAW,wBAAQU,QArBzB,SAACK,GACrBA,EAAMC,iBACN,IAAME,EAAO,0CAAsCjC,EAAKuB,MAA3C,eAAuDvB,EAAKwB,OAA5D,KACVU,OAAOC,QAAQF,IAAU9B,EAAWH,IAkBF,oBAAkD,WCO5EoC,EAjDG,SAAC,GAAe,IAAbC,EAAY,EAAZA,MAAY,EAECjC,mBAAS,IAFV,mBAExBW,EAFwB,KAEduB,EAFc,OAGClC,mBAAS,IAHV,mBAGxBmC,EAHwB,KAGdC,EAHc,KAazBC,EAAW,uCAAG,WAAOX,GAAP,SAAAY,EAAA,sDAClBZ,EAAMC,iBACNM,EAAM,CAAEtB,WAASwB,aACjBD,EAAY,IACZE,EAAY,IAJM,2CAAH,sDAOjB,OACE,uBAAMG,SAAUF,EAAhB,UACE,2CAEE,uBACEG,KAAK,OACLC,MAAO9B,EACPiB,KAAK,WACLc,SAvBgB,SAAChB,GACvBQ,EAAYR,EAAMiB,OAAOF,aAyBvB,2CAEE,uBACED,KAAK,WACLC,MAAON,EACPP,KAAK,WACLc,SA5BgB,SAAChB,GACvBU,EAAYV,EAAMiB,OAAOF,aA8BvB,wBAAQD,KAAK,SAAb,uBCuBSI,EAhEE,SAAC,GAEX,IADLC,EACI,EADJA,WACI,EAEwB7C,mBAAS,IAFjC,mBAEGoB,EAFH,KAEW0B,EAFX,OAGsB9C,mBAAS,IAH/B,mBAGGmB,EAHH,KAGU4B,EAHV,OAIkB/C,mBAAS,IAJ3B,mBAIGuB,EAJH,KAIQyB,EAJR,KAyBJ,OAEE,uBAAMT,SAXQ,SAACb,GACfA,EAAMC,iBACNkB,EAAW,CAAEzB,SAAOD,QAAMI,QAC1BwB,EAAS,IACTC,EAAO,IACPF,EAAU,KAMV,UACE,4CACA,yCAEE,uBACEN,KAAK,OACLZ,KAAK,QACLa,MAAOtB,EACPuB,SA1Ba,SAAChB,GACpBqB,EAASrB,EAAMiB,OAAOF,aA4BpB,0CAEE,uBACED,KAAK,OACLC,MAAOrB,EACPQ,KAAK,SACLc,SAtCc,SAAChB,GACrBoB,EAAUpB,EAAMiB,OAAOF,aAwCrB,uCAEE,uBACED,KAAK,OACLC,MAAOlB,EACPK,KAAK,MACLc,SAzCW,SAAChB,GAClBsB,EAAOtB,EAAMiB,OAAOF,aA2ClB,wBAAQD,KAAK,SAAb,sBC9CSS,EAbM,SAAC,GAAiB,IAAfpB,EAAc,EAAdA,QACtB,OAAe,OAAZA,EACM,KAIP,qBAAKqB,UAAWrB,EAAQW,KAAxB,SACGX,EAAQsB,WCNTC,EAAYC,IAAMC,YAAW,SAACC,EAAOC,GAAS,IAAD,EAEnBxD,oBAAS,GAFU,mBAE1CyD,EAF0C,KAEjCC,EAFiC,KAI3CC,EAAkB,CAAEC,QAASH,EAAU,OAAS,IAChDI,EAAkB,CAAED,QAASH,EAAU,GAAK,QAE5CK,EAAmB,WACvBJ,GAAYD,IASd,OANAM,8BAAoBP,GAAK,WACvB,MAAO,CACLM,uBAKF,gCACE,qBAAKjD,MAAO8C,EAAZ,SACE,wBAAQtC,QAASyC,EAAjB,SAAoCP,EAAMS,gBAE5C,sBAAKnD,MAAOgD,EAAZ,UACGN,EAAMU,SACP,wBAAQ5C,QAASyC,EAAjB,6BAMRV,EAAUc,YAAc,YAMTd,Q,gBCtCTe,EAAU,aAEZC,EAAQ,KAqCG,GAAEC,OA/BF,WAEb,OADgBC,IAAMC,IAAIJ,GACXK,MAAK,SAAAC,GAAQ,OAAIA,EAASC,SA6BlB7B,WA1BT,uCAAG,WAAO8B,GAAP,iBAAArC,EAAA,6DACXsC,EAAQ,CACZC,QAAS,CAAEC,cAAeV,IAFX,SAIOE,IAAMS,KAAKZ,EAASQ,EAAWC,GAJtC,cAIXH,EAJW,yBAKVA,EAASC,MALC,2CAAH,sDA0BoBM,SAlBtB,uCAAG,WAAOL,GAAP,mBAAArC,EAAA,6DACTsC,EAAQ,CACZC,QAAS,CAAEC,cAAeV,IAEtB7C,EAJS,UAIA4C,EAJA,YAIWQ,EAAUM,IAJrB,SAKQX,IAAMY,IAAI3D,EAAIoD,EAAUlD,MAAMmD,GALtC,cAKTH,EALS,yBAMRA,EAASC,MAND,2CAAH,sDAkBgC3E,WAT9B,uCAAG,WAAO4E,GAAP,mBAAArC,EAAA,6DACXsC,EAAQ,CACZC,QAAS,CAAEC,cAAeV,IAEtB7C,EAJW,UAIF4C,EAJE,YAISQ,EAAUM,IAJnB,SAKMX,IAAMa,OAAO5D,EAAIqD,GALvB,cAKXH,EALW,yBAMVA,EAASC,MANC,2CAAH,sDAS0CU,SAnCzC,SAACC,GAChBjB,EAAK,iBAAaiB,KCIL,GAAEpD,MALN,uCAAG,WAAOqD,GAAP,eAAAhD,EAAA,sEACWgC,IAAMS,KALhB,aAK8BO,GAD/B,cACNb,EADM,yBAELA,EAASC,MAFJ,2CAAH,uDC0IIa,EAtIH,WAAO,IAAD,EACUvF,mBAAS,IADnB,mBACTwF,EADS,KACFC,EADE,OAEczF,mBAAS,IAFvB,mBAET6B,EAFS,KAEA6D,EAFA,OAGQ1F,mBAAS,MAHjB,mBAGTF,EAHS,KAGH6F,EAHG,KAIVC,EAAcC,mBAYdC,EAAW,uCAAG,4BAAAxD,EAAA,sEACKyD,EAAY1B,SADjB,OACZ2B,EADY,OAElBP,EAASO,EAASC,MAAK,SAAC3D,EAAE4D,GAAH,OAASA,EAAEzE,MAAQa,EAAEb,UAF1B,2CAAH,qDAMjB0E,oBAAUL,EAAa,IAEvBK,qBAAU,WACR,IAAMC,EAAiBtE,OAAOuE,aAAaC,QAAQ,uBACnD,GAAGF,EAAe,CAChB,IAAMtG,EAAOyG,KAAKC,MAAMJ,GACxBT,EAAQ7F,GACRiG,EAAYX,SAAStF,EAAKsE,UAE5B,IAEF,IAAM/B,EAAW,uCAAG,WAAOiD,GAAP,eAAAhD,EAAA,+EAEGmE,EAAaxE,MAAMqD,GAFtB,OAEVxF,EAFU,OAGhBgC,OAAOuE,aAAaK,QAAQ,sBAAuBH,KAAKI,UAAU7G,IAClEiG,EAAYX,SAAStF,EAAKsE,OAC1BuB,EAAQ7F,GACR4F,EAAW,CAAElD,KAAM,eAAgBW,QAAQ,GAAD,OAAKrD,EAAKa,SAAV,wBAC1CiG,YAAW,WACTlB,EAAW,QACX,KATc,kDAYhBA,EAAW,CAAElD,KAAM,QAASW,QAAS,sBACrCyD,YAAW,WACTlB,EAAW,QACX,KAfc,0DAAH,sDAmBXmB,EAAO,uCAAG,WAAOC,GAAP,eAAAxE,EAAA,+EAEOyD,EAAYlD,WAAWiE,GAF9B,OAENlH,EAFM,OAGZgG,EAAYmB,QAAQjD,mBACpB2B,EAASD,EAAMwB,OAAOpH,IACtB8F,EAAW,CAAElD,KAAM,eAAgBW,QAAQ,cAAD,OAAgBvD,EAAKuB,OAArB,OAA6C,KAAhBvB,EAAKwB,OAAgB,GAArB,cAAiCxB,EAAKwB,WAC7GwF,YAAW,WACTlB,EAAW,QACX,KARU,kDAWZA,EAAW,CAAElD,KAAM,QAASW,QAAS,sCACrCyD,YAAW,WACTlB,EAAW,QACX,KAdU,0DAAH,sDAmBPV,EAAQ,uCAAG,WAAO8B,GAAP,mBAAAxE,EAAA,+EAEMyD,EAAYf,SAAS8B,GAF3B,OAEPlH,EAFO,OAGTqH,EAHS,YAGEzB,GACX0B,EAAcD,EAAKE,WAAU,SAAAC,GAAY,OAAIA,EAAanC,KAAOrF,EAAKqF,MAC1EgC,EAAKC,GAAetH,EACpB6F,EAASwB,EAAKhB,MAAK,SAAC3D,EAAE4D,GAAH,OAASA,EAAEzE,MAAQa,EAAEb,UAN3B,kDASbiE,EAAW,CAAElD,KAAM,QAASW,QAAS,eACrCyD,YAAW,WACTlB,EAAW,QACX,KAZW,0DAAH,sDAgBR3F,EAAU,uCAAG,WAAO+G,GAAP,eAAAxE,EAAA,+EAETyD,EAAYhG,WAAW+G,GAFd,OAIfG,GADIA,EAHW,YAGAzB,IACH6B,QAAO,SAAAzH,GAAI,OAAIA,EAAKqF,KAAO6B,EAAW7B,MAClDQ,EAASwB,GALM,gDAQfvB,EAAW,CAAElD,KAAM,QAASW,QAAS,iBACrCyD,YAAW,WACTlB,EAAW,QACX,KAXa,yDAAH,sDAsBhB,OACE,gCACE,cAAC,EAAD,CAAc7D,QAASA,IACvB,uCACU,OAAT/B,EACC,cAAC,EAAD,CACEmC,MAAOI,IAET,gCACE,8BAAIvC,EAAK8B,KAAT,cAAyB,wBAAQP,QAhBpB,SAACK,GACpBA,EAAMC,iBACNG,OAAOuE,aAAaiB,WAAW,uBAC/B3B,EAAQ,OAauB,uBA9G7B,cAAC,EAAD,CAAW3B,YAAY,WAAWR,IAAKoC,EAAvC,SACE,cAAC,EAAD,CACE/C,WAAYgE,SAgHN,OAAT/G,EAAe0F,EAAM/E,KAAI,SAAAb,GAAI,OAC5B,cAAC,EAAD,CACEA,KAAMA,EACNC,WAAYmF,EACZlF,KAAMA,EAAKa,SACXZ,WAAYA,GAJHH,EAAKqF,OAKd,S,MCpIVsC,IAASC,OAAO,cAAC,EAAD,IAASC,SAASC,eAAe,W","file":"static/js/main.5e0d5396.chunk.js","sourcesContent":["import React, { useState } from 'react'\nconst Blog = ({ blog, updateLike,user, deleteBlog }) => {\n  const [detailedView, setDetailedView] = useState(true)\n  const [liked, setLiked] = useState(false)\n\n\n  const blogStyle = {\n    paddingTop: 10,\n    paddingLeft: 2,\n    border: 'solid',\n    borderWidth: 1,\n    marginBottom: 5\n  }\n\n  const detailHandler = () => {\n    setDetailedView(!detailedView)\n    if(detailedView) determineLiked()\n  }\n\n  const likeHandler = (event) => {\n    event.preventDefault()\n    updateLike(blog)\n    setLiked(!liked)\n  }\n\n  const deleteHandler = (event) => {\n    event.preventDefault()\n    const message = `Are you sure you want to remove ${blog.title} by ${blog.author}?`\n    if(window.confirm(message)) deleteBlog(blog)\n\n  }\n\n  const determineLiked = () => {\n    const usernames = blog.likedBy.map(like => like.username)\n    setLiked(usernames.includes(user))\n  }\n\n  return (\n    <div style={blogStyle}>\n      {detailedView ?\n        <p>{blog.title} - {blog.author} <button onClick={detailHandler}>view</button></p>\n        : <div>\n          <p>{blog.title} - {blog.author} <button onClick={detailHandler}>hide</button></p>\n          <a href={blog.url.slice(0,4) !== 'http' ? '//'+blog.url : blog.url}>{blog.url}</a>\n          <p>likes:{blog.likes}<button onClick={likeHandler}>{ liked ? 'unlike' : 'like'}</button></p>\n          <h3>{blog.user.name}</h3>\n          {user === blog.user.username ? <button onClick={deleteHandler}>remove</button> : null}\n        </div>\n      }\n    </div>\n  )\n}\n\nexport default Blog","import React, { useState } from 'react'\nimport PropTypes from 'prop-types'\n\n\nconst LoginForm = ({ login }) => {\n\n  const [username, setUsername] = useState('')\n  const [password, setPassword] = useState('')\n\n  const usernameHandler = (event) => {\n    setUsername(event.target.value)\n  }\n\n  const passwordHandler = (event) => {\n    setPassword(event.target.value)\n  }\n\n  const handleLogin = async (event) => {\n    event.preventDefault()\n    login({ username,password })\n    setUsername('')\n    setPassword('')\n  }\n\n  return (\n    <form onSubmit={handleLogin}>\n      <div>\n      username\n        <input\n          type=\"text\"\n          value={username}\n          name=\"Username\"\n          onChange={usernameHandler}\n        />\n      </div>\n      <div>\n      password\n        <input\n          type=\"password\"\n          value={password}\n          name=\"Password\"\n          onChange={passwordHandler}\n        />\n      </div>\n      <button type=\"submit\">login</button>\n    </form>\n  )\n}\n\nLoginForm.propTypes = {\n  login: PropTypes.func.isRequired,\n}\n\nexport default LoginForm","import React, { useState } from 'react'\n\n\nconst BlogForm = ({\n  createBlog\n}) => {\n\n  const [author, setAuthor] = useState('')\n  const [title, setTitle] = useState('')\n  const [url, setUrl] = useState('')\n\n  const authorHandler = (event) => {\n    setAuthor(event.target.value)\n  }\n  const titleHandler = (event) => {\n    setTitle(event.target.value)\n  }\n  const urlHandler = (event) => {\n    setUrl(event.target.value)\n  }\n\n  const addBlog = (event) => {\n    event.preventDefault()\n    createBlog({ author,title,url })\n    setTitle('')\n    setUrl('')\n    setAuthor('')\n  }\n\n\n  return (\n\n    <form onSubmit={addBlog}>\n      <h2>Create New</h2>\n      <div>\n         Title:\n        <input\n          type='text'\n          name='Title'\n          value={title}\n          onChange={titleHandler}\n        />\n      </div>\n      <div>\n          Author:\n        <input\n          type='text'\n          value={author}\n          name='Author'\n          onChange={authorHandler}\n        />\n      </div>\n      <div>\n          Url:\n        <input\n          type='text'\n          value={url}\n          name='Url'\n          onChange={urlHandler}\n        />\n      </div>\n      <button type=\"submit\">save</button>\n    </form>\n\n  )\n}\n\nexport default BlogForm","import React from 'react'\n\nconst Notification = ({ message }) => {\n  if(message === null) {\n    return null\n  }\n\n  return (\n    <div className={message.type}>\n      {message.content}\n    </div>\n  )\n\n}\n\nexport default Notification","import React, { useState, useImperativeHandle } from 'react'\nimport PropTypes from 'prop-types'\n\nconst Togglable = React.forwardRef((props, ref) => {\n\n  const [visible, setVisible] = useState(false)\n\n  const hideWhenVisible = { display: visible ? 'none' : '' }\n  const showWhenVisible = { display: visible ? '' : 'none' }\n\n  const toggleVisibility = () => {\n    setVisible(!visible)\n  }\n\n  useImperativeHandle(ref, () => {\n    return {\n      toggleVisibility\n    }\n  })\n\n  return (\n    <div>\n      <div style={hideWhenVisible}>\n        <button onClick={toggleVisibility}>{props.buttonLabel}</button>\n      </div>\n      <div style={showWhenVisible}>\n        {props.children}\n        <button onClick={toggleVisibility}>cancel</button>\n      </div>\n    </div>\n  )\n})\n\nTogglable.displayName = 'Togglable'\n\nTogglable.propTypes = {\n  buttonLabel: PropTypes.string.isRequired\n}\n\nexport default Togglable","import axios from 'axios'\nconst baseUrl = '/api/blogs'\n\nlet token = null\n\nconst setToken = (newToken) => {\n  token = `bearer ${newToken}`\n}\n\nconst getAll = () => {\n  const request = axios.get(baseUrl)\n  return request.then(response => response.data)\n}\n\nconst createBlog = async (newObject) => {\n  const config ={\n    headers: { Authorization: token }\n  }\n  const response =  await axios.post(baseUrl, newObject, config)\n  return response.data\n}\n\nconst likeBlog = async (newObject) => {\n  const config ={\n    headers: { Authorization: token }\n  }\n  const url = `${baseUrl}/${newObject.id}`\n  const response = await axios.put(url,newObject.likes,config)\n  return response.data\n}\n\nconst deleteBlog = async (newObject) => {\n  const config ={\n    headers: { Authorization: token }\n  }\n  const url = `${baseUrl}/${newObject.id}`\n  const response = await axios.delete(url,config)\n  return response.data\n}\n\nexport default { getAll, createBlog,likeBlog, deleteBlog, setToken }","import axios from 'axios'\nconst baseUrl ='/api/login'\n\n\n\nconst login = async (credentials) => {\n  const response = await axios.post(baseUrl, credentials)\n  return response.data\n}\n\nexport default { login }","import React, { useState, useEffect, useRef } from 'react'\nimport Blog from './components/Blog'\nimport LoginForm from './components/LoginForm'\nimport BlogForm from './components/BlogForm'\nimport Notification from './components/Notification'\nimport Togglable from './components/Togglable'\nimport blogService from './services/blogs'\nimport loginService from './services/login'\n\nconst App = () => {\n  const [blogs, setBlogs] = useState([])\n  const [message, setMessage] = useState('')\n  const [user, setUser] = useState(null)\n  const blogFormRef = useRef()\n\n  const blogForm = () => {\n    return (\n      <Togglable buttonLabel='new blog' ref={blogFormRef}>\n        <BlogForm\n          createBlog={addBlog}\n        />\n      </Togglable>\n    )\n  }\n\n  const getAllBlogs = async () => {\n    const reqBlogs = await blogService.getAll()\n    setBlogs(reqBlogs.sort((a,b) => b.likes - a.likes))\n  }\n\n\n  useEffect(getAllBlogs, [])\n\n  useEffect(() => {\n    const loggedUserJSON = window.localStorage.getItem('loggedInBlogappUser')\n    if(loggedUserJSON){\n      const user = JSON.parse(loggedUserJSON)\n      setUser(user)\n      blogService.setToken(user.token)\n    }\n  },[])\n\n  const handleLogin = async (credentials) => {\n    try{\n      const user = await loginService.login(credentials)\n      window.localStorage.setItem('loggedInBlogappUser', JSON.stringify(user))\n      blogService.setToken(user.token)\n      setUser(user)\n      setMessage({ type: 'notification', content: `${user.username} login successfull` })\n      setTimeout(() => {\n        setMessage(null)\n      },5000)\n    }\n    catch(error){\n      setMessage({ type: 'error', content: 'wrong credentials' })\n      setTimeout(() => {\n        setMessage(null)\n      },5000)\n    }\n  }\n\n  const addBlog = async (blogObject) => {\n    try{\n      const blog = await blogService.createBlog(blogObject)\n      blogFormRef.current.toggleVisibility()\n      setBlogs(blogs.concat(blog))\n      setMessage({ type: 'notification', content: `a new blog ${blog.title}${blog.author === '' ? '' : ` by ${blog.author}`}` })\n      setTimeout(() => {\n        setMessage(null)\n      },5000)\n    }\n    catch(error){\n      setMessage({ type: 'error', content: 'Title and Url fields are required' })\n      setTimeout(() => {\n        setMessage(null)\n      },5000)\n    }\n\n  }\n\n  const likeBlog = async (blogObject) => {\n    try{\n      const blog = await blogService.likeBlog(blogObject)\n      let copy = [...blogs]\n      let updateIndex = copy.findIndex(blogToUpdate => blogToUpdate.id === blog.id)\n      copy[updateIndex] = blog\n      setBlogs(copy.sort((a,b) => b.likes - a.likes))\n    }\n    catch(error){\n      setMessage({ type: 'error', content: 'like error' })\n      setTimeout(() => {\n        setMessage(null)\n      },5000)\n    }\n  }\n\n  const deleteBlog = async (blogObject) => {\n    try{\n      await blogService.deleteBlog(blogObject)\n      let copy = [...blogs]\n      copy = copy.filter(blog => blog.id !== blogObject.id)\n      setBlogs(copy)\n    }\n    catch(error){\n      setMessage({ type: 'error', content: 'unauthorized' })\n      setTimeout(() => {\n        setMessage(null)\n      },5000)\n    }\n  }\n\n  const handleLogout = (event) => {\n    event.preventDefault()\n    window.localStorage.removeItem('loggedInBlogappUser')\n    setUser(null)\n  }\n\n\n  return (\n    <div>\n      <Notification message={message} />\n      <h2>blogs</h2>\n      {user === null ?\n        <LoginForm\n          login={handleLogin}\n        /> :\n        <div>\n          <p>{user.name} logged-in <button onClick={handleLogout}>logout</button></p>\n          {blogForm()}\n        </div>\n      }\n      {user !== null ?blogs.map(blog =>\n        <Blog key={blog.id}\n          blog={blog}\n          updateLike={likeBlog}\n          user={user.username}\n          deleteBlog={deleteBlog}/>\n      ) : null\n      }\n    </div>\n  )\n}\n\nexport default App","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport App from './App'\nimport './index.css'\n\nReactDOM.render(<App />, document.getElementById('root'))"],"sourceRoot":""}